Starting audit...
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/AbilitiesFactory.java:1:9: Name 'Abilities' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ability.java:1:9: Name 'Abilities' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Fireblast.java:1:9: Name 'Abilities' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Fireblast.java:6:10: Variable 'damage' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Fireblast.java:8:20: Parameter level should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Fireblast.java:9:19: '350' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Fireblast.java:9:34: '50' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Fireblast.java:10:37: '-0.2' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Fireblast.java:11:38: '0.2' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Fireblast.java:12:42: '-0.1' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Fireblast.java:13:38: '0.05' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Fireblast.java:16:3: Class 'Fireblast' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fireblast' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Fireblast.java:17:25: Parameter enemyType should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:1:9: Name 'Abilities' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:6:10: Variable 'damage' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:8:17: Parameter level should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:8:28: Parameter round should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:9:19: '150' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:9:34: '20' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:9:49: '50' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:9:64: '30' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:10:37: '-0.2' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:11:38: '0.2' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:12:42: '-0.1' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:13:38: '0.05' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:16:3: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:17:25: Parameter enemyType should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:1:9: Name 'Heroes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:8:20: Name 'HP' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:9:17: Name 'XP' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:14:18: Parameter position should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:21:3: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'win' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'win' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:21:19: Parameter loserLevel should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:23:28: '200' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:23:62: '40' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:26:3: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getThreshold' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getThreshold' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:27:13: '250' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:27:32: '50' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:30:3: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getPosition' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:34:3: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'updatePosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'updatePosition' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:34:30: Parameter move should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:35:11: 'switch' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:53:3: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:57:3: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getHP' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getHP' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:61:3: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'takeDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'takeDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:61:26: Parameter damage should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:64:7: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:64:22: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:66:5: '}' at column 5 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/HeroesType.java:1:9: Name 'Heroes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Knight.java:1:9: Name 'Heroes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:1:9: Name 'Heroes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:9:21: Parameter position should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:11:19: '500' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:16:3: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'win' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'win' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:17:19: Parameter loserLevel should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:24:17: '50' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:29:3: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'getTotalDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'getTotalDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:30:32: Parameter enemyType should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:30:54: Parameter terrainType should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:30:72: Parameter round should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:34: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:36:7: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:37:22: '1.25' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:42:3: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Rogue.java:1:9: Name 'Heroes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Wizard.java:1:9: Name 'Heroes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInput.java:7:21: Name 'N' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInput.java:8:21: Name 'M' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInput.java:21:17: Name 'N' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInput.java:22:17: Name 'M' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInput.java:25:7: Parameter heroesPosition should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInput.java:47:3: Class 'GameInput' looks like designed for extension (can be subclassed), but the method 'getHeroesTypes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameInput' final or making the method 'getHeroesTypes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInput.java:51:3: Class 'GameInput' looks like designed for extension (can be subclassed), but the method 'getHeroPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameInput' final or making the method 'getHeroPosition' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInput.java:51:45: Parameter index should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInput.java:55:3: Class 'GameInput' looks like designed for extension (can be subclassed), but the method 'getHeroMovement' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameInput' final or making the method 'getHeroMovement' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInput.java:55:31: Parameter round should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInput.java:55:42: Parameter heroIndex should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInput.java:59:3: Class 'GameInput' looks like designed for extension (can be subclassed), but the method 'getRoundCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameInput' final or making the method 'getRoundCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInputLoader.java:18:9: Name 'N' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInputLoader.java:19:9: Name 'M' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInputLoader.java:33:10: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInputLoader.java:33:23: '<' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInputLoader.java:33:24: '<' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInputLoader.java:41:10: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInputLoader.java:41:42: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Main.java:12:41: Parameter pos1 should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Main.java:12:52: Parameter pos2 should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Main.java:12:62: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Main.java:39:12: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Main.java:39:47: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Main.java:47:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Main.java:55:45: Must have at least one statement. [EmptyBlock]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Map.java:6:26: Name 'N' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Map.java:6:39: Name 'M' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Map.java:8:12: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Map.java:8:35: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Map.java:9:16: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Map.java:15:5: Class 'Map' looks like designed for extension (can be subclassed), but the method 'getMap' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Map' final or making the method 'getMap' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Map.java:19:5: Class 'Map' looks like designed for extension (can be subclassed), but the method 'getLand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Map' final or making the method 'getLand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 100 errors.
