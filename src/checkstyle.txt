Starting audit...
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/AbilitiesFactory.java:1:9: Name 'Abilities' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/AbilitiesFactory.java:13: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/AbilitiesFactory.java:13:85: Parameter terrainType should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ability.java:1:9: Name 'Abilities' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Backstab.java:1:9: Name 'Abilities' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Backstab.java:7:9: Variable 'damage' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Backstab.java:9:19: Parameter level should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Backstab.java:10:19: '200' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Backstab.java:10:34: '20' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Backstab.java:11:37: '0.2f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Backstab.java:12:38: '-0.1f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Backstab.java:13:42: '0.25f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Backstab.java:14:38: '0.25f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Backstab.java:17:3: Class 'Backstab' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Backstab' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Backstab.java:22:3: Class 'Backstab' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Backstab' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Backstab.java:23:24: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Backstab.java:27:3: Class 'Backstab' looks like designed for extension (can be subclassed), but the method 'executeOvertimeAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Backstab' final or making the method 'executeOvertimeAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Backstab.java:28:39: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Deflect.java:1:9: Name 'Abilities' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Deflect.java:7:8: Variable 'terrainType' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Deflect.java:8:9: Variable 'percentage' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Deflect.java:9:7: Variable 'round' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Deflect.java:11:18: Parameter level should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Deflect.java:11:29: Parameter round should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Deflect.java:11:40: Parameter terrainType should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Deflect.java:12:32: '0.35f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Deflect.java:12:49: '0.02f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Deflect.java:12:57: '0.7f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Deflect.java:13:37: '0.2f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Deflect.java:14:38: '0.4f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Deflect.java:15:42: '0.3f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Deflect.java:21:3: Class 'Deflect' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deflect' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Deflect.java:26:3: Class 'Deflect' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deflect' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Deflect.java:27:24: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Deflect.java:32:3: Class 'Deflect' looks like designed for extension (can be subclassed), but the method 'executeOvertimeAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deflect' final or making the method 'executeOvertimeAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Deflect.java:33:39: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Drain.java:1:9: Name 'Abilities' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Drain.java:7:9: Variable 'percentage' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Drain.java:9:16: Parameter level should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Drain.java:10:23: '0.2f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Drain.java:10:39: '0.05f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Drain.java:11:37: '-0.2f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Drain.java:12:38: '0.2f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Drain.java:13:42: '-0.1f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Drain.java:14:38: '0.05f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Drain.java:17:3: Class 'Drain' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Drain' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Drain.java:22:3: Class 'Drain' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Drain' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Drain.java:23:24: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Drain.java:24:30: '0.3f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Drain.java:30:3: Class 'Drain' looks like designed for extension (can be subclassed), but the method 'executeOvertimeAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Drain' final or making the method 'executeOvertimeAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Drain.java:31:39: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Execute.java:1:9: Name 'Abilities' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Execute.java:7:9: Variable 'damage' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Execute.java:9:18: Parameter level should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Execute.java:10:19: '200' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Execute.java:10:34: '30' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Execute.java:11:37: '0.15f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Execute.java:13:42: '0.1f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Execute.java:14:38: '-0.2f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Execute.java:17:3: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Execute.java:22:3: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Execute.java:23:24: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Execute.java:25:30: '0.2f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Execute.java:25:38: '0.01f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Execute.java:25:69: '0.4f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Execute.java:34:3: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'executeOvertimeAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'executeOvertimeAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Execute.java:35:39: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Fireblast.java:1:9: Name 'Abilities' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Fireblast.java:7:9: Variable 'damage' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Fireblast.java:9:20: Parameter level should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Fireblast.java:10:19: '350' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Fireblast.java:10:34: '50' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Fireblast.java:11:37: '-0.2f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Fireblast.java:12:38: '0.2f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Fireblast.java:13:42: '-0.1f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Fireblast.java:14:38: '0.05f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Fireblast.java:17:3: Class 'Fireblast' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fireblast' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Fireblast.java:22:3: Class 'Fireblast' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fireblast' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Fireblast.java:23:24: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Fireblast.java:27:3: Class 'Fireblast' looks like designed for extension (can be subclassed), but the method 'executeOvertimeAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fireblast' final or making the method 'executeOvertimeAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Fireblast.java:28:39: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:1:9: Name 'Abilities' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:7:9: Variable 'damage' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:9:17: Parameter level should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:9:28: Parameter round should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:10:19: '150' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:10:34: '20' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:11:37: '-0.2f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:12:38: '0.2f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:13:42: '-0.1f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:14:38: '0.05f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:17:3: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:22:3: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:23:24: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:27:3: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'executeOvertimeAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'executeOvertimeAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Ignite.java:28:39: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Paralysis.java:1:9: Name 'Abilities' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Paralysis.java:7:9: Variable 'damage' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Paralysis.java:9:20: Parameter level should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Paralysis.java:10:19: '40' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Paralysis.java:10:33: '10' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Paralysis.java:11:37: '-0.2f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Paralysis.java:12:38: '0.2f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Paralysis.java:13:42: '-0.1f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Paralysis.java:14:38: '0.05f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Paralysis.java:17:3: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Paralysis.java:22:3: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Paralysis.java:23:24: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Paralysis.java:27:3: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'executeOvertimeAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'executeOvertimeAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Paralysis.java:28:39: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Slam.java:0: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Slam.java:1:9: Name 'Abilities' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Slam.java:7:11: Variable 'damage' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Slam.java:9:17: Parameter level should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Slam.java:10:23: '100' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Slam.java:10:38: '40' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Slam.java:11:41: '-0.2f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Slam.java:12:42: '0.2f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Slam.java:13:46: '-0.1f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Slam.java:14:42: '0.05f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Slam.java:17:5: Class 'Slam' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Slam' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Slam.java:22:5: Class 'Slam' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Slam' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Slam.java:23:26: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Slam.java:27:5: Class 'Slam' looks like designed for extension (can be subclassed), but the method 'executeOvertimeAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Slam' final or making the method 'executeOvertimeAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Abilities/Slam.java:28:41: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:1:9: Name 'Heroes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:9:17: Name 'HP' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:10:17: Name 'XP' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:20:18: Parameter position should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:29:3: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'win' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'win' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:29:19: Parameter loserLevel should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:31:28: '200' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:31:62: '40' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:36:3: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'setDead' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'setDead' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:36:23: Parameter dead should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:40:3: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'isDead' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'isDead' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:44:3: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getThreshold' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getThreshold' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:45:13: '250' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:45:32: '50' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:48:3: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getPosition' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:52:3: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'updatePosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'updatePosition' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:52:30: Parameter move should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:74:3: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:78:3: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getHP' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getHP' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:82:3: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getXP' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getXP' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:86:3: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getInitHP' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getInitHP' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:90:3: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'takeDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'takeDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:90:26: Parameter damage should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:100:3: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'getLevel' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'getLevel' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:104:3: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'setOvertime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'setOvertime' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:104:27: Parameter overtimeAbility should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:104:35: 'overtimeAbility' hides a field. [HiddenField]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:104:52: Parameter overtimeRoundEnd should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:104:56: 'overtimeRoundEnd' hides a field. [HiddenField]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:104:74: Parameter overtimeHero should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:104:79: 'overtimeHero' hides a field. [HiddenField]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:111:3: Class 'Hero' looks like designed for extension (can be subclassed), but the method 'updateOvertime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hero' final or making the method 'updateOvertime' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Hero.java:111:30: Parameter round should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/HeroesType.java:1:9: Name 'Heroes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Knight.java:1:9: Name 'Heroes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Knight.java:9:17: Parameter position should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Knight.java:11:19: '900' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Knight.java:16:3: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'levelUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'levelUp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Knight.java:22:17: '80' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Knight.java:27:3: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'getTotalDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'getTotalDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Knight.java:28:29: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Knight.java:28:45: Parameter terrainType should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Knight.java:28:63: Parameter round should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Knight.java:37:24: '1.15f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Knight.java:38:21: '1.15f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Knight.java:45:3: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'getTotalDamageWithoutModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'getTotalDamageWithoutModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Knight.java:46:44: Parameter terrainType should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Knight.java:46:62: Parameter round should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Knight.java:53:24: '1.15f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Knight.java:54:21: '1.15f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:1:9: Name 'Heroes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:9:21: Parameter position should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:11:19: '500' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:16:3: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'levelUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'levelUp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:22:17: '50' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:27:3: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'getTotalDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'getTotalDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:28:29: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:28:45: Parameter terrainType should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:28:63: Parameter round should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:37:26: '1.25' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:38:23: '1.25' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:44:3: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'getTotalDamageWithoutModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'getTotalDamageWithoutModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:45:44: Parameter terrainType should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:45:62: Parameter round should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:52:26: '1.25' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:53:23: '1.25' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Pyromancer.java:59:3: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Rogue.java:1:9: Name 'Heroes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Rogue.java:8:7: Variable 'backstabCount' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Rogue.java:9:7: Variable 'backstabCountOvertime' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Rogue.java:11:16: Parameter position should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Rogue.java:13:19: '600' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Rogue.java:21:3: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'levelUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'levelUp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Rogue.java:27:17: '40' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Rogue.java:32:3: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'getTotalDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'getTotalDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Rogue.java:33:29: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Rogue.java:33:45: Parameter terrainType should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Rogue.java:33:63: Parameter round should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Rogue.java:43:25: '3' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Rogue.java:44:26: '1.5f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Rogue.java:47:25: '1.15f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Rogue.java:48:26: '1.15f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Rogue.java:55:3: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'getTotalDamageWithoutModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'getTotalDamageWithoutModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Rogue.java:56:44: Parameter terrainType should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Rogue.java:56:62: Parameter round should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Rogue.java:62:33: '3' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Rogue.java:63:26: '1.5f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Rogue.java:66:25: '1.15f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Rogue.java:67:26: '1.15f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Wizard.java:1:9: Name 'Heroes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Wizard.java:8:17: Parameter position should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Wizard.java:10:19: '400' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Wizard.java:15:3: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'levelUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'levelUp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Wizard.java:21:17: '30' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Wizard.java:26:3: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'getTotalDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'getTotalDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Wizard.java:27:29: Parameter enemyHero should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Wizard.java:27:45: Parameter terrainType should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Wizard.java:27:63: Parameter round should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Wizard.java:36:22: '1.10f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Wizard.java:37:24: '1.10f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Wizard.java:43:3: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'getTotalDamageWithoutModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'getTotalDamageWithoutModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Wizard.java:44:44: Parameter terrainType should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/Heroes/Wizard.java:44:62: Parameter round should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInput.java:7:21: Name 'N' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInput.java:8:21: Name 'M' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInput.java:21:17: Name 'N' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInput.java:22:17: Name 'M' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInput.java:25:7: Parameter heroesPosition should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInput.java:47:3: Class 'GameInput' looks like designed for extension (can be subclassed), but the method 'getHeroesTypes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameInput' final or making the method 'getHeroesTypes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInput.java:51:3: Class 'GameInput' looks like designed for extension (can be subclassed), but the method 'getHeroPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameInput' final or making the method 'getHeroPosition' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInput.java:51:45: Parameter index should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInput.java:55:3: Class 'GameInput' looks like designed for extension (can be subclassed), but the method 'getHeroMovement' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameInput' final or making the method 'getHeroMovement' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInput.java:55:31: Parameter round should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInput.java:55:42: Parameter heroIndex should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameInput.java:59:3: Class 'GameInput' looks like designed for extension (can be subclassed), but the method 'getRoundCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameInput' final or making the method 'getRoundCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameLoader.java:20:9: Name 'N' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameLoader.java:21:9: Name 'M' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameLoader.java:35:10: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameLoader.java:35:23: '<' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameLoader.java:35:24: '<' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameLoader.java:43:10: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/GameLoader.java:43:42: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Main.java:3: Using the '.*' form of import should be avoided - Heroes.*. [AvoidStarImport]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Main.java:14:41: Parameter pos1 should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Main.java:14:53: Parameter pos2 should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Main.java:18:35: Parameter type should be final. [FinalParameters]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Main.java:19: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Map.java:6:26: Name 'N' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Map.java:6:39: Name 'M' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Map.java:8:12: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Map.java:8:35: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Map.java:9:16: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Map.java:15:5: Class 'Map' looks like designed for extension (can be subclassed), but the method 'getMap' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Map' final or making the method 'getMap' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/nourm/IdeaProjects/League-Of-OOP/src/main/Map.java:19:5: Class 'Map' looks like designed for extension (can be subclassed), but the method 'getLand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Map' final or making the method 'getLand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 259 errors.
